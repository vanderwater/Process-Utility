// Code generated by protoc-gen-go.
// source: process.proto
// DO NOT EDIT!

/*
Package processProto is a generated protocol buffer package.

It is generated from these files:
	process.proto

It has these top-level messages:
	Process
	ProcessSet
*/
package processProto

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Process struct {
	ProcessID        *int32   `protobuf:"varint,1,opt,name=processID" json:"processID,omitempty"`
	VirtualSize      *int32   `protobuf:"varint,2,opt,name=virtual_size" json:"virtual_size,omitempty"`
	TimeStarted      *string  `protobuf:"bytes,3,opt,name=time_started" json:"time_started,omitempty"`
	Command          *string  `protobuf:"bytes,4,opt,name=command" json:"command,omitempty"`
	CPUUsage         *float64 `protobuf:"fixed64,5,opt,name=CPU_usage" json:"CPU_usage,omitempty"`
	WasOpened        *bool    `protobuf:"varint,15,opt,name=was_opened" json:"was_opened,omitempty"`
	WasClosed        *bool    `protobuf:"varint,16,opt,name=was_closed" json:"was_closed,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Process) Reset()         { *m = Process{} }
func (m *Process) String() string { return proto.CompactTextString(m) }
func (*Process) ProtoMessage()    {}

func (m *Process) GetProcessID() int32 {
	if m != nil && m.ProcessID != nil {
		return *m.ProcessID
	}
	return 0
}

func (m *Process) GetVirtualSize() int32 {
	if m != nil && m.VirtualSize != nil {
		return *m.VirtualSize
	}
	return 0
}

func (m *Process) GetTimeStarted() string {
	if m != nil && m.TimeStarted != nil {
		return *m.TimeStarted
	}
	return ""
}

func (m *Process) GetCommand() string {
	if m != nil && m.Command != nil {
		return *m.Command
	}
	return ""
}

func (m *Process) GetCPUUsage() float64 {
	if m != nil && m.CPUUsage != nil {
		return *m.CPUUsage
	}
	return 0
}

func (m *Process) GetWasOpened() bool {
	if m != nil && m.WasOpened != nil {
		return *m.WasOpened
	}
	return false
}

func (m *Process) GetWasClosed() bool {
	if m != nil && m.WasClosed != nil {
		return *m.WasClosed
	}
	return false
}

type ProcessSet struct {
	Processes        []*Process `protobuf:"bytes,1,rep,name=processes" json:"processes,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *ProcessSet) Reset()         { *m = ProcessSet{} }
func (m *ProcessSet) String() string { return proto.CompactTextString(m) }
func (*ProcessSet) ProtoMessage()    {}

func (m *ProcessSet) GetProcesses() []*Process {
	if m != nil {
		return m.Processes
	}
	return nil
}

func init() {
}
